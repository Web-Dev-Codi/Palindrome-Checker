// const textInput = document.getElementById("text-input");
// const checkButton = document.getElementById("check-btn");
// const result = document.getElementById("result");
// const hiddenContainer = document.getElementById("hidden-container");

// const checkBtn = (event) => {
// 	event.preventDefault();
//     hiddenContainer.style.display = "block";
// };

// const textParser = (event) => {
// 	result.innerText = event.target.value;
// };

// const palindromCheckerFuntion = (textParser) => {

// };

// const resultsDiv = (textParser) => {
// 	const displayDiv = document.createElement("p");
// 	const text = document.createTextNode(textParser);
//     result.appendChild(displayDiv);
//     displayDiv.appendChild(text)
// };

// checkButton.addEventListener("click", checkBtn);
// textInput.addEventListener("input", textParser);

const arrayStr = ["racecar"];

const palindromChecker = (str) => {
	let palindromEl = '';
	for (let i = 0; i < str.length; i++) {
		for (let j = 0; j < str.length; j++) {
			let str1 = Array.from(str[i])
			let str2 = Array.from(str[j])
            if (str1.includes(i) === str2.includes(j)) {
              palindromEl = str1.toString(str2)
            }
		}
	}
    return palindromEl;
};

const palTest = palindromChecker(arrayStr);
console.log("palTest:", palTest);






const palindromChecker = (str) => {
	for (let i = 0; i < str.length; i++) {
		for (let j = str.length - 1; j > -1; j--) {
			if (str[i] === str[j]) {
				const displayDiv = document.createElement("p");
				const text = document.createTextNode(textParser);
				result.appendChild(displayDiv);
				displayDiv.appendChild(text);
			} else if (str[i] !== str[j]) {
				const displayDiv = document.createElement("p");
				const text = document.createTextNode(textParser);
				result.appendChild(displayDiv);
				displayDiv.appendChild(text);
			}
		}
	}
};


const palindromChecker = (str) => {

	let palindromEl = [...str];
	for (let i = 0; i < str.length; i++) {
		for (let j = 0; j < str.length; j++) {
			let str1 = Array.from(str[i]);
			let str2 = Array.from(str[j]);
			if (str1.indexOf(str2, 0)) {
				palindromEl =
					hiddenContainer.innerText = `${str[i]} is a palindrom`;
			} else if (str1.indexOf(str2, 0)) {
				palindromEl =
					hiddenContainer.innerText = `${str[i]} is NOT a palindrom`;
			}
		}
	}
	return palindromEl;
};


WORKING ONE 


const _$palindromCheckerFn = (str) => {
	let para = document.createElement("p");
	for (let i = 0; i < str.length; i++) {
		const arrOne = [...str[i]];
		const arrTwo = [...arrOne].reverse();
		const arrStr = arrOne
			.toString()
			.replace(/[\s~`!@#$%^&*(){}\[\];:"'<,.>?\/\\|_+=-]/g, "");
		const arrStrTwo = arrTwo
			.toString()
			.replace(/[\s~`!@#$%^&*(){}\[\];:"'<,.>?\/\\|_+=-]/g, "");
		if (arrStr !== arrStrTwo) {
			result.appendChild(para);
			para.className = "user-input";
			para.innerText = `${str} is NOT a palindrom`;
		}
		if (arrStr === arrStrTwo) {
			result.appendChild(para);
			para.className = "user-input";
			para.innerText = `${str} is a palindrom`;
		}
	}
};


const _$palindromCheckerFn = (str) => {
	let para = document.createElement("p");
	for (let i = 0; i < str.length; i++) {
		const arrOne = [...str[i]];
		const arrTwo = [...arrOne].reverse();
		const arrStr = arrOne
			.toString()
			.replace(/[\s~`!@#$%^&*(){}\[\];:"'<,.>?\/\\|_+=-]/g, "");
		const arrStrTwo = arrTwo
			.toString()
			.replace(/[\s~`!@#$%^&*(){}\[\];:"'<,.>?\/\\|_+=-]/g, "");
		if (arrStr !== arrStrTwo) {
			result.appendChild(para);
			para.className = "user-input";
			para.innerText = `${str} is NOT a palindrom`;
			console.log(`${str} is NOT a palindrom`);
		}
		if (arrStr === arrStrTwo) {
			result.appendChild(para);
			para.className = "user-input";
			para.innerText = `${str} is a palindrom`;
			console.log(`${str} is a palindrom`);
		}
	}
};
